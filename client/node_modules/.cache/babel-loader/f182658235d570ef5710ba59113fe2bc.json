{"ast":null,"code":"import React from\"react\";import colors from\"../../config/colors\";import globalStyles from\"../../config/globalStyles\";import MyMemeCard from\"../../components/UI/MyMemeCard\";import{useMediaPredicate}from\"react-media-hook\";var MyPosts=function MyPosts(props){var myPosts=props.myPosts;var biggerThan1076=useMediaPredicate(\"(min-width: 1076px)\");var biggerThan720=useMediaPredicate(\"(min-width: 720px)\");return/*#__PURE__*/React.createElement(\"div\",{style:styles.container},/*#__PURE__*/React.createElement(\"h2\",{style:styles.heading},\"My Posts\"),/*#__PURE__*/React.createElement(\"div\",{style:styles.posts},myPosts.posts.map(function(post,i){return/*#__PURE__*/React.createElement(\"div\",{style:!biggerThan720?styles.smallMemeContainer:biggerThan720&&!biggerThan1076?styles.mediumMemeContainer:styles.memeContainer,key:i},/*#__PURE__*/React.createElement(MyMemeCard,{post:post}));})));};var styles={container:{width:\"100%\"},heading:{fontFamily:globalStyles.titleFont,color:colors.secondary,textAlign:\"center\"},posts:{display:\"flex\",flexDirection:\"row\",flexWrap:\"wrap\"},memeContainer:{width:\"calc(25% - 20px)\",margin:10},mediumMemeContainer:{width:\"calc(50% - 20px)\",margin:10},smallMemeContainer:{width:\"calc(100% - 20px)\",margin:10}};export default MyPosts;","map":{"version":3,"sources":["/Users/justin/Documents/Programming /meme-share/client/src/views/profile/MyPosts.jsx"],"names":["React","colors","globalStyles","MyMemeCard","useMediaPredicate","MyPosts","props","myPosts","biggerThan1076","biggerThan720","styles","container","heading","posts","map","post","i","smallMemeContainer","mediumMemeContainer","memeContainer","width","fontFamily","titleFont","color","secondary","textAlign","display","flexDirection","flexWrap","margin"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,gCAAvB,CACA,OAASC,iBAAT,KAAkC,kBAAlC,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,IACjBC,CAAAA,OADiB,CACLD,KADK,CACjBC,OADiB,CAGzB,GAAMC,CAAAA,cAAc,CAAGJ,iBAAiB,CAAC,qBAAD,CAAxC,CACA,GAAMK,CAAAA,aAAa,CAAGL,iBAAiB,CAAC,oBAAD,CAAvC,CAEA,mBACE,2BAAK,KAAK,CAAEM,MAAM,CAACC,SAAnB,eACE,0BAAI,KAAK,CAAED,MAAM,CAACE,OAAlB,aADF,cAEE,2BAAK,KAAK,CAAEF,MAAM,CAACG,KAAnB,EACGN,OAAO,CAACM,KAAR,CAAcC,GAAd,CAAkB,SAACC,IAAD,CAAOC,CAAP,CAAa,CAC9B,mBACE,2BACE,KAAK,CACH,CAACP,aAAD,CACIC,MAAM,CAACO,kBADX,CAEIR,aAAa,EAAI,CAACD,cAAlB,CACAE,MAAM,CAACQ,mBADP,CAEAR,MAAM,CAACS,aANf,CAQE,GAAG,CAAEH,CARP,eAUE,oBAAC,UAAD,EAAY,IAAI,CAAED,IAAlB,EAVF,CADF,CAcD,CAfA,CADH,CAFF,CADF,CAuBD,CA7BD,CA+BA,GAAML,CAAAA,MAAM,CAAG,CACbC,SAAS,CAAE,CACTS,KAAK,CAAE,MADE,CADE,CAIbR,OAAO,CAAE,CACPS,UAAU,CAAEnB,YAAY,CAACoB,SADlB,CAEPC,KAAK,CAAEtB,MAAM,CAACuB,SAFP,CAGPC,SAAS,CAAE,QAHJ,CAJI,CASbZ,KAAK,CAAE,CACLa,OAAO,CAAE,MADJ,CAELC,aAAa,CAAE,KAFV,CAGLC,QAAQ,CAAE,MAHL,CATM,CAcbT,aAAa,CAAE,CACbC,KAAK,CAAE,kBADM,CAEbS,MAAM,CAAE,EAFK,CAdF,CAkBbX,mBAAmB,CAAE,CACnBE,KAAK,CAAE,kBADY,CAEnBS,MAAM,CAAE,EAFW,CAlBR,CAsBbZ,kBAAkB,CAAE,CAClBG,KAAK,CAAE,mBADW,CAElBS,MAAM,CAAE,EAFU,CAtBP,CAAf,CA4BA,cAAexB,CAAAA,OAAf","sourcesContent":["import React from \"react\";\nimport colors from \"../../config/colors\";\nimport globalStyles from \"../../config/globalStyles\";\nimport MyMemeCard from \"../../components/UI/MyMemeCard\";\nimport { useMediaPredicate } from \"react-media-hook\";\n\nconst MyPosts = (props) => {\n  const { myPosts } = props;\n\n  const biggerThan1076 = useMediaPredicate(\"(min-width: 1076px)\");\n  const biggerThan720 = useMediaPredicate(\"(min-width: 720px)\");\n\n  return (\n    <div style={styles.container}>\n      <h2 style={styles.heading}>My Posts</h2>\n      <div style={styles.posts}>\n        {myPosts.posts.map((post, i) => {\n          return (\n            <div\n              style={\n                !biggerThan720\n                  ? styles.smallMemeContainer\n                  : biggerThan720 && !biggerThan1076\n                  ? styles.mediumMemeContainer\n                  : styles.memeContainer\n              }\n              key={i}\n            >\n              <MyMemeCard post={post} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    width: \"100%\",\n  },\n  heading: {\n    fontFamily: globalStyles.titleFont,\n    color: colors.secondary,\n    textAlign: \"center\",\n  },\n  posts: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n  memeContainer: {\n    width: \"calc(25% - 20px)\",\n    margin: 10,\n  },\n  mediumMemeContainer: {\n    width: \"calc(50% - 20px)\",\n    margin: 10,\n  },\n  smallMemeContainer: {\n    width: \"calc(100% - 20px)\",\n    margin: 10,\n  },\n};\n\nexport default MyPosts;\n"]},"metadata":{},"sourceType":"module"}