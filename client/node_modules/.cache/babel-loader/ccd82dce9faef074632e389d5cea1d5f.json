{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Documents/Programming /meme-share/client/src/views/auth/PrivateRoute.jsx\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const auth = useSelector(state => ({\n    auth: state.auth\n  }), []);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => auth.auth.token ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 27\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 54\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/justin/Documents/Programming /meme-share/client/src/views/auth/PrivateRoute.jsx"],"names":["React","Route","Redirect","useSelector","PrivateRoute","component","Component","rest","auth","state","props","token"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1D,QAAMC,IAAI,GAAGL,WAAW,CACrBM,KAAD,KAAY;AACVD,IAAAA,IAAI,EAAEC,KAAK,CAACD;AADF,GAAZ,CADsB,EAItB,EAJsB,CAAxB;AAOA,sBACE,oBAAC,KAAD,oBACMD,IADN;AAEE,IAAA,MAAM,EAAGG,KAAD,IACNF,IAAI,CAACA,IAAL,CAAUG,KAAV,gBAAkB,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlB,gBAA6C,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD,CAhBD;;AAkBA,eAAeN,YAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const auth = useSelector(\n    (state) => ({\n      auth: state.auth,\n    }),\n    []\n  );\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth.auth.token ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}