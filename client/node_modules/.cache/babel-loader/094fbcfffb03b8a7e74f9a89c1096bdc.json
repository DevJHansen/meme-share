{"ast":null,"code":"import { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS } from \"../actions/types\";\nconst initialState = {\n  token: localStorage.getItem(\"meme-sahre token\"),\n  isAuthenticated: false,\n  isLoading: false,\n  user: null\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"meme-sahre token\", action.payload);\n      return { ...state,\n        token: action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n      localStorage.removeItem(\"meme-sahre token\");\n      return { ...state,\n        token: null,\n        isAuthenticated: null,\n        isLoading: false,\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/justin/Documents/Programming /meme-share/client/src/reducers/authReducer.js"],"names":["USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","state","action","type","payload","setItem","removeItem"],"mappings":"AAAA,SACEA,WADF,EAEEC,YAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,UALF,EAMEC,cANF,QAOO,kBAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CADY;AAEnBC,EAAAA,eAAe,EAAE,KAFE;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGP,YAAlB,EAAgCQ,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,YAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELF,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKX,WAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELH,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,IAAI,EAAEE,MAAM,CAACE;AAJR,OAAP;;AAMF,SAAKb,aAAL;AACEK,MAAAA,YAAY,CAACS,OAAb,CAAqB,kBAArB,EAAyCH,MAAM,CAACE,OAAhD;AACA,aAAO,EACL,GAAGH,KADE;AAELN,QAAAA,KAAK,EAAEO,MAAM,CAACE,OAFT;AAGLN,QAAAA,eAAe,EAAE,IAHZ;AAILC,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF,SAAKT,UAAL;AACA,SAAKE,UAAL;AACA,SAAKC,cAAL;AACEG,MAAAA,YAAY,CAACU,UAAb,CAAwB,kBAAxB;AACA,aAAO,EACL,GAAGL,KADE;AAELN,QAAAA,KAAK,EAAE,IAFF;AAGLG,QAAAA,eAAe,EAAE,IAHZ;AAILC,QAAAA,SAAS,EAAE,KAJN;AAKLC,QAAAA,IAAI,EAAE;AALD,OAAP;;AAQF;AACE,aAAOC,KAAP;AAlCJ;AAoCD","sourcesContent":["import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"meme-sahre token\"),\n  isAuthenticated: false,\n  isLoading: false,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"meme-sahre token\", action.payload);\n      return {\n        ...state,\n        token: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n      localStorage.removeItem(\"meme-sahre token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: null,\n        isLoading: false,\n        user: null,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}