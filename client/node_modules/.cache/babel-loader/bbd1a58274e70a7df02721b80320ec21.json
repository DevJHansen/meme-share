{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Documents/Programming /meme-share/client/src/views/feed/Feed.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport globalStyles from \"../../config/globalStyles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getPosts } from \"../../actions/postActions\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport Loading from \"../../components/UI/Loading\";\nimport MemeCard from \"../../components/UI/MemeCard\";\nimport Button from \"../../components/UI/Button\";\nimport Modal from \"../../components/UI/Modal\";\nimport Link from \"../../components/UI/Link\";\nimport Backdrop from \"../../components/UI/Backdrop\";\nimport colors from \"../../config/colors\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst All = props => {\n  const dispatch = useDispatch();\n  const biggerThan1024 = useMediaPredicate(\"(min-width: 1024px)\");\n  const biggerThan720 = useMediaPredicate(\"(min-width: 720px)\");\n  const [toggleModal, setToggleModal] = useState(false);\n  const {\n    category\n  } = props;\n\n  const handleToggleModal = () => {\n    setToggleModal(!toggleModal);\n  };\n\n  useEffect(() => {\n    if (category) {\n      dispatch(getPosts(category));\n    } else {\n      dispatch(getPosts());\n    }\n  }, [dispatch, category]);\n  const posts = useSelector(state => ({\n    posts: state.posts.posts\n  }), []);\n\n  if (!posts.posts.length) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: globalStyles.fullScreenLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  const ModalBody = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: styles.modalMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"You need to be signed in to interact with content on our site.\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.modalBtnContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: \"Login\",\n      style: {\n        backgroundColor: colors.green,\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: \"Signup\",\n      style: {\n        backgroundColor: colors.tertiary\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    header: /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Hey there!\"),\n    body: /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }),\n    close: handleToggleModal,\n    isOpen: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), toggleModal ? /*#__PURE__*/React.createElement(Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 22\n    }\n  }) : null, biggerThan1024 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, posts.posts.map((post, i) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MemeCard, {\n      toggleModal: handleToggleModal,\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }));\n  }))) : biggerThan720 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.mediumContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, posts.posts.map((post, i) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MemeCard, {\n      toggleModal: handleToggleModal,\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }));\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.smallContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: posts.posts.length,\n    next: () => {\n      console.log(\"bottom\");\n    },\n    hasMore: true,\n    loader: /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 23\n      }\n    }),\n    endMessage: /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, \"Yay! You have seen it all\")) // below props only if you need pull down functionality\n    // refreshFunction={this.refresh}\n    // pullDownToRefresh\n    // pullDownToRefreshThreshold={50}\n    // pullDownToRefreshContent={\n    //   <h3 style={{ textAlign: 'center' }}>&#8595; Pull down to refresh</h3>\n    // }\n    // releaseToRefreshContent={\n    //   <h3 style={{ textAlign: 'center' }}>&#8593; Release to refresh</h3>\n    // }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, posts.posts.map((post, i) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MemeCard, {\n      toggleModal: handleToggleModal,\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }));\n  })))));\n};\n\nconst styles = {\n  container: {\n    marginLeft: \"35vw\",\n    marginRight: \"35vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"56px\"\n  },\n  mediumContainer: {\n    marginLeft: \"20vw\",\n    marginRight: \"20vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"56px\"\n  },\n  smallContainer: {\n    marginLeft: \"5vw\",\n    marginRight: \"5vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"56px\"\n  },\n  content: {\n    maxWidth: \"90vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    paddingBottom: 20\n  },\n  modalMessage: {\n    textAlign: \"center\"\n  },\n  modalBtnContainer: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n};\nexport default All;","map":{"version":3,"sources":["/Users/justin/Documents/Programming /meme-share/client/src/views/feed/Feed.jsx"],"names":["React","useEffect","useState","globalStyles","useSelector","useDispatch","getPosts","useMediaPredicate","Loading","MemeCard","Button","Modal","Link","Backdrop","colors","InfiniteScroll","All","props","dispatch","biggerThan1024","biggerThan720","toggleModal","setToggleModal","category","handleToggleModal","posts","state","length","fullScreenLoading","ModalBody","styles","modalMessage","modalBtnContainer","backgroundColor","green","marginRight","tertiary","container","content","map","post","i","mediumContainer","smallContainer","console","log","textAlign","marginLeft","height","marginTop","maxWidth","display","flexDirection","justifyContent","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport globalStyles from \"../../config/globalStyles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getPosts } from \"../../actions/postActions\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport Loading from \"../../components/UI/Loading\";\nimport MemeCard from \"../../components/UI/MemeCard\";\nimport Button from \"../../components/UI/Button\";\nimport Modal from \"../../components/UI/Modal\";\nimport Link from \"../../components/UI/Link\";\nimport Backdrop from \"../../components/UI/Backdrop\";\nimport colors from \"../../config/colors\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst All = (props) => {\n  const dispatch = useDispatch();\n  const biggerThan1024 = useMediaPredicate(\"(min-width: 1024px)\");\n  const biggerThan720 = useMediaPredicate(\"(min-width: 720px)\");\n  const [toggleModal, setToggleModal] = useState(false);\n\n  const { category } = props;\n\n  const handleToggleModal = () => {\n    setToggleModal(!toggleModal);\n  };\n\n  useEffect(() => {\n    if (category) {\n      dispatch(getPosts(category));\n    } else {\n      dispatch(getPosts());\n    }\n  }, [dispatch, category]);\n\n  const posts = useSelector(\n    (state) => ({\n      posts: state.posts.posts,\n    }),\n    []\n  );\n\n  if (!posts.posts.length) {\n    return (\n      <div style={globalStyles.fullScreenLoading}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const ModalBody = () => {\n    return (\n      <div>\n        <h4 style={styles.modalMessage}>\n          You need to be signed in to interact with content on our site.\n        </h4>\n        <div style={styles.modalBtnContainer}>\n          <Link to=\"/login\">\n            <Button\n              title=\"Login\"\n              style={{ backgroundColor: colors.green, marginRight: 10 }}\n            />\n          </Link>\n          <Link to=\"/signup\">\n            <Button\n              title=\"Signup\"\n              style={{ backgroundColor: colors.tertiary }}\n            />\n          </Link>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <Modal\n        header={<h1>Hey there!</h1>}\n        body={<ModalBody />}\n        close={handleToggleModal}\n        isOpen={toggleModal}\n      />\n      {toggleModal ? <Backdrop /> : null}\n      {biggerThan1024 ? (\n        <div style={styles.container}>\n          <div style={styles.content}>\n            {posts.posts.map((post, i) => {\n              return (\n                <React.Fragment key={i}>\n                  <MemeCard toggleModal={handleToggleModal} post={post} />\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </div>\n      ) : biggerThan720 ? (\n        <div style={styles.mediumContainer}>\n          <div style={styles.content}>\n            {posts.posts.map((post, i) => {\n              return (\n                <React.Fragment key={i}>\n                  <MemeCard toggleModal={handleToggleModal} post={post} />\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </div>\n      ) : (\n        <div style={styles.smallContainer}>\n          <div style={styles.content}>\n            <InfiniteScroll\n              dataLength={posts.posts.length}\n              next={() => {\n                console.log(\"bottom\");\n              }}\n              hasMore={true}\n              loader={<Loading />}\n              endMessage={\n                <p style={{ textAlign: \"center\" }}>\n                  <b>Yay! You have seen it all</b>\n                </p>\n              }\n              // below props only if you need pull down functionality\n              // refreshFunction={this.refresh}\n              // pullDownToRefresh\n              // pullDownToRefreshThreshold={50}\n              // pullDownToRefreshContent={\n              //   <h3 style={{ textAlign: 'center' }}>&#8595; Pull down to refresh</h3>\n              // }\n              // releaseToRefreshContent={\n              //   <h3 style={{ textAlign: 'center' }}>&#8593; Release to refresh</h3>\n              // }\n            >\n              {posts.posts.map((post, i) => {\n                return (\n                  <React.Fragment key={i}>\n                    <MemeCard toggleModal={handleToggleModal} post={post} />\n                  </React.Fragment>\n                );\n              })}\n            </InfiniteScroll>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst styles = {\n  container: {\n    marginLeft: \"35vw\",\n    marginRight: \"35vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"56px\",\n  },\n  mediumContainer: {\n    marginLeft: \"20vw\",\n    marginRight: \"20vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"56px\",\n  },\n  smallContainer: {\n    marginLeft: \"5vw\",\n    marginRight: \"5vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"56px\",\n  },\n  content: {\n    maxWidth: \"90vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    paddingBottom: 20,\n  },\n  modalMessage: {\n    textAlign: \"center\",\n  },\n  modalBtnContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n};\n\nexport default All;\n"]},"metadata":{},"sourceType":"module"}