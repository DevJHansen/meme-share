{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Documents/Programming /meme-share/client/src/views/post/PostContent.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport globalStyles from \"../../config/globalStyles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getPost } from \"../../actions/postActions\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport Loading from \"../../components/UI/Loading\";\nimport FullMemeCard from \"../../components/UI/FullMemeCard\";\nimport Button from \"../../components/UI/Button\";\nimport Modal from \"../../components/UI/Modal\";\nimport Link from \"../../components/UI/Link\";\nimport Backdrop from \"../../components/UI/Backdrop\";\nimport colors from \"../../config/colors\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst PostContent = props => {\n  const dispatch = useDispatch();\n  const biggerThan1024 = useMediaPredicate(\"(min-width: 1024px)\");\n  const biggerThan720 = useMediaPredicate(\"(min-width: 720px)\");\n  const [toggleModal, setToggleModal] = useState(false);\n  const {\n    postId\n  } = props;\n\n  const handleToggleModal = () => {\n    setToggleModal(!toggleModal);\n  };\n\n  useEffect(() => {\n    dispatch(getPost(postId));\n  }, [dispatch]);\n  const post = useSelector(state => ({\n    post: state.post.post\n  }), []);\n\n  if (!post.post.length) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: globalStyles.fullScreenLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  const loadMore = () => {// Load more comments\n  };\n\n  const ModalBody = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: styles.modalMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"You need to be signed in to interact with content on our site.\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.modalBtnContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: \"Login\",\n      style: {\n        backgroundColor: colors.green,\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: \"Signup\",\n      style: {\n        backgroundColor: colors.tertiary\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: post.post.length,\n    next: () => loadMore(),\n    hasMore: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    header: /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, \"Hey there!\"),\n    body: /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }),\n    close: handleToggleModal,\n    isOpen: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), toggleModal ? /*#__PURE__*/React.createElement(Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 24\n    }\n  }) : null, biggerThan1024 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  })) : biggerThan720 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.mediumContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.smallContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst styles = {\n  container: {\n    marginLeft: \"35vw\",\n    marginRight: \"35vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingBottom: 20\n  },\n  mediumContainer: {\n    marginLeft: \"20vw\",\n    marginRight: \"20vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\"\n  },\n  smallContainer: {\n    marginLeft: \"5vw\",\n    marginRight: \"5vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\"\n  },\n  content: {\n    maxWidth: \"90vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    paddingBottom: 20\n  },\n  modalMessage: {\n    textAlign: \"center\"\n  },\n  modalBtnContainer: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  loading: {\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n};\nexport default PostContent;","map":{"version":3,"sources":["/Users/justin/Documents/Programming /meme-share/client/src/views/post/PostContent.jsx"],"names":["React","useEffect","useState","globalStyles","useSelector","useDispatch","getPost","useMediaPredicate","Loading","FullMemeCard","Button","Modal","Link","Backdrop","colors","InfiniteScroll","PostContent","props","dispatch","biggerThan1024","biggerThan720","toggleModal","setToggleModal","postId","handleToggleModal","post","state","length","fullScreenLoading","loadMore","ModalBody","styles","modalMessage","modalBtnContainer","backgroundColor","green","marginRight","tertiary","container","content","mediumContainer","smallContainer","marginLeft","height","marginTop","marginBottom","display","flexDirection","paddingBottom","maxWidth","justifyContent","textAlign","loading","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport globalStyles from \"../../config/globalStyles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getPost } from \"../../actions/postActions\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport Loading from \"../../components/UI/Loading\";\nimport FullMemeCard from \"../../components/UI/FullMemeCard\";\nimport Button from \"../../components/UI/Button\";\nimport Modal from \"../../components/UI/Modal\";\nimport Link from \"../../components/UI/Link\";\nimport Backdrop from \"../../components/UI/Backdrop\";\nimport colors from \"../../config/colors\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst PostContent = (props) => {\n  const dispatch = useDispatch();\n  const biggerThan1024 = useMediaPredicate(\"(min-width: 1024px)\");\n  const biggerThan720 = useMediaPredicate(\"(min-width: 720px)\");\n  const [toggleModal, setToggleModal] = useState(false);\n\n  const { postId } = props;\n\n  const handleToggleModal = () => {\n    setToggleModal(!toggleModal);\n  };\n\n  useEffect(() => {\n    dispatch(getPost(postId));\n  }, [dispatch]);\n\n  const post = useSelector(\n    (state) => ({\n      post: state.post.post,\n    }),\n    []\n  );\n\n  if (!post.post.length) {\n    return (\n      <div style={globalStyles.fullScreenLoading}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const loadMore = () => {\n    // Load more comments\n  };\n\n  const ModalBody = () => {\n    return (\n      <div>\n        <h4 style={styles.modalMessage}>\n          You need to be signed in to interact with content on our site.\n        </h4>\n        <div style={styles.modalBtnContainer}>\n          <Link to=\"/login\">\n            <Button\n              title=\"Login\"\n              style={{ backgroundColor: colors.green, marginRight: 10 }}\n            />\n          </Link>\n          <Link to=\"/signup\">\n            <Button\n              title=\"Signup\"\n              style={{ backgroundColor: colors.tertiary }}\n            />\n          </Link>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <InfiniteScroll\n        dataLength={post.post.length}\n        next={() => loadMore()}\n        hasMore={true}\n      >\n        <Modal\n          header={<h1>Hey there!</h1>}\n          body={<ModalBody />}\n          close={handleToggleModal}\n          isOpen={toggleModal}\n        />\n        {toggleModal ? <Backdrop /> : null}\n        {biggerThan1024 ? (\n          <div style={styles.container}>\n            <div style={styles.content}>\n              {/* <FullMemeCard toggleModal={handleToggleModal} post={post.post} /> */}\n            </div>\n          </div>\n        ) : biggerThan720 ? (\n          <div style={styles.mediumContainer}>\n            <div style={styles.content}>\n              {/* <FullMemeCard toggleModal={handleToggleModal} post={post.post} /> */}\n            </div>\n          </div>\n        ) : (\n          <div style={styles.smallContainer}>\n            <div style={styles.content}>\n              {/* <FullMemeCard toggleModal={handleToggleModal} post={post.post} /> */}\n            </div>\n          </div>\n        )}\n      </InfiniteScroll>\n      {/* <div style={styles.loading}>\n        {loadingPosts.loadingPosts ? <Loading /> : null}\n      </div> */}\n    </React.Fragment>\n  );\n};\n\nconst styles = {\n  container: {\n    marginLeft: \"35vw\",\n    marginRight: \"35vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingBottom: 20,\n  },\n  mediumContainer: {\n    marginLeft: \"20vw\",\n    marginRight: \"20vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\",\n  },\n  smallContainer: {\n    marginLeft: \"5vw\",\n    marginRight: \"5vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\",\n  },\n  content: {\n    maxWidth: \"90vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    paddingBottom: 20,\n  },\n  modalMessage: {\n    textAlign: \"center\",\n  },\n  modalBtnContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  loading: {\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n};\n\nexport default PostContent;\n"]},"metadata":{},"sourceType":"module"}