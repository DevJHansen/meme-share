{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Documents/Programming /meme-share/client/src/views/profile/MyPosts.jsx\";\nimport React from \"react\";\nimport colors from \"../../config/colors\";\nimport globalStyles from \"../../config/globalStyles\";\nimport MyMemeCard from \"../../components/UI/MyMemeCard\";\nimport { useMediaPredicate } from \"react-media-hook\";\n\nconst MyPosts = props => {\n  const {\n    myPosts\n  } = props;\n  const biggerThan1024 = useMediaPredicate(\"(min-width: 1024px)\");\n  const biggerThan720 = useMediaPredicate(\"(min-width: 720px)\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"My Posts\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, myPosts.posts.map((post, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: !biggerThan720 ? styles.smallMemeContainer : biggerThan720 && !biggerThan1024 ? styles.mediumMemeContainer : styles.memeContainer,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MyMemeCard, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }));\n  })));\n};\n\nconst styles = {\n  container: {\n    width: \"100%\"\n  },\n  heading: {\n    fontFamily: globalStyles.titleFont,\n    color: colors.secondary,\n    textAlign: \"center\"\n  },\n  posts: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  memeContainer: {\n    width: \"calc(25% - 20px)\",\n    margin: 10\n  },\n  mediumMemeContainer: {\n    width: \"calc(50% - 20px)\",\n    margin: 10\n  },\n  smallMemeContainer: {\n    width: \"calc(100% - 20px)\",\n    margin: 10\n  }\n};\nexport default MyPosts;","map":{"version":3,"sources":["/Users/justin/Documents/Programming /meme-share/client/src/views/profile/MyPosts.jsx"],"names":["React","colors","globalStyles","MyMemeCard","useMediaPredicate","MyPosts","props","myPosts","biggerThan1024","biggerThan720","styles","container","heading","posts","map","post","i","smallMemeContainer","mediumMemeContainer","memeContainer","width","fontFamily","titleFont","color","secondary","textAlign","display","flexDirection","flexWrap","margin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AAEA,QAAME,cAAc,GAAGJ,iBAAiB,CAAC,qBAAD,CAAxC;AACA,QAAMK,aAAa,GAAGL,iBAAiB,CAAC,oBAAD,CAAvC;AAEA,sBACE;AAAK,IAAA,KAAK,EAAEM,MAAM,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,KAAK,EAAED,MAAM,CAACE,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,IAAA,KAAK,EAAEF,MAAM,CAACG,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,OAAO,CAACM,KAAR,CAAcC,GAAd,CAAkB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC9B,wBACE;AACE,MAAA,KAAK,EACH,CAACP,aAAD,GACIC,MAAM,CAACO,kBADX,GAEIR,aAAa,IAAI,CAACD,cAAlB,GACAE,MAAM,CAACQ,mBADP,GAEAR,MAAM,CAACS,aANf;AAQE,MAAA,GAAG,EAAEH,CARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAED,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAcD,GAfA,CADH,CAFF,CADF;AAuBD,CA7BD;;AA+BA,MAAML,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTS,IAAAA,KAAK,EAAE;AADE,GADE;AAIbR,EAAAA,OAAO,EAAE;AACPS,IAAAA,UAAU,EAAEnB,YAAY,CAACoB,SADlB;AAEPC,IAAAA,KAAK,EAAEtB,MAAM,CAACuB,SAFP;AAGPC,IAAAA,SAAS,EAAE;AAHJ,GAJI;AASbZ,EAAAA,KAAK,EAAE;AACLa,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,aAAa,EAAE,KAFV;AAGLC,IAAAA,QAAQ,EAAE;AAHL,GATM;AAcbT,EAAAA,aAAa,EAAE;AACbC,IAAAA,KAAK,EAAE,kBADM;AAEbS,IAAAA,MAAM,EAAE;AAFK,GAdF;AAkBbX,EAAAA,mBAAmB,EAAE;AACnBE,IAAAA,KAAK,EAAE,kBADY;AAEnBS,IAAAA,MAAM,EAAE;AAFW,GAlBR;AAsBbZ,EAAAA,kBAAkB,EAAE;AAClBG,IAAAA,KAAK,EAAE,mBADW;AAElBS,IAAAA,MAAM,EAAE;AAFU;AAtBP,CAAf;AA4BA,eAAexB,OAAf","sourcesContent":["import React from \"react\";\nimport colors from \"../../config/colors\";\nimport globalStyles from \"../../config/globalStyles\";\nimport MyMemeCard from \"../../components/UI/MyMemeCard\";\nimport { useMediaPredicate } from \"react-media-hook\";\n\nconst MyPosts = (props) => {\n  const { myPosts } = props;\n\n  const biggerThan1024 = useMediaPredicate(\"(min-width: 1024px)\");\n  const biggerThan720 = useMediaPredicate(\"(min-width: 720px)\");\n\n  return (\n    <div style={styles.container}>\n      <h2 style={styles.heading}>My Posts</h2>\n      <div style={styles.posts}>\n        {myPosts.posts.map((post, i) => {\n          return (\n            <div\n              style={\n                !biggerThan720\n                  ? styles.smallMemeContainer\n                  : biggerThan720 && !biggerThan1024\n                  ? styles.mediumMemeContainer\n                  : styles.memeContainer\n              }\n              key={i}\n            >\n              <MyMemeCard post={post} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    width: \"100%\",\n  },\n  heading: {\n    fontFamily: globalStyles.titleFont,\n    color: colors.secondary,\n    textAlign: \"center\",\n  },\n  posts: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n  memeContainer: {\n    width: \"calc(25% - 20px)\",\n    margin: 10,\n  },\n  mediumMemeContainer: {\n    width: \"calc(50% - 20px)\",\n    margin: 10,\n  },\n  smallMemeContainer: {\n    width: \"calc(100% - 20px)\",\n    margin: 10,\n  },\n};\n\nexport default MyPosts;\n"]},"metadata":{},"sourceType":"module"}