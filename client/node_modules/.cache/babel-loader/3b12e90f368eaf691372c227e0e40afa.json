{"ast":null,"code":"import axios from \"axios\";\nimport { returnErrors } from \"./errorActions\";\nimport { GET_MY_POSTS, GET_POSTS, GET_POST } from \"./types\";\nimport { APIURL } from \"../config/vars\";\nexport const getPost = postId => dispatch => {\n  axios.get(`${APIURL}posts/${postId}`).then(res => {\n    dispatch({\n      type: GET_POST,\n      payload: res.data.data\n    });\n  }).catch(err => {\n    dispatch(console.log(err));\n  });\n};\nexport const getMyPosts = () => (dispatch, getState) => {\n  const user = getState().auth.user;\n\n  if (user) {\n    axios.get(`${APIURL}posts?user=${user._id}`).then(res => {\n      dispatch({\n        type: GET_MY_POSTS,\n        payload: res.data.data\n      });\n    }).catch(err => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n    });\n  }\n};\nexport const getPosts = () => dispatch => {\n  axios.get(`${APIURL}posts`).then(res => {\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data.data\n    });\n  }).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status));\n  });\n};\nexport const upVote = post => async (dispatch, getState) => {\n  const user = getState().auth;\n  const upVote = await axios.post(`${APIURL}votes/upvotepost`, {\n    post: post._id,\n    user: user.user._id\n  });\n\n  if (upVote.data.success) {\n    // post was up voted\n    // Add to local up vote state\n    // remove from local down vote state if neccessary\n    console.log(\"upvoted\");\n  } else {\n    // remove from local up vote state\n    // remove up vote with put request\n    await axios.put(`${APIURL}votes/upvotepost`, {\n      post: post._id,\n      user: user.user._id\n    });\n    console.log(\"removed down vote\");\n  }\n};","map":{"version":3,"sources":["/Users/justin/Documents/Programming /meme-share/client/src/actions/postActions.js"],"names":["axios","returnErrors","GET_MY_POSTS","GET_POSTS","GET_POST","APIURL","getPost","postId","dispatch","get","then","res","type","payload","data","catch","err","console","log","getMyPosts","getState","user","auth","_id","response","status","getPosts","upVote","post","success","put"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { returnErrors } from \"./errorActions\";\n\nimport { GET_MY_POSTS, GET_POSTS, GET_POST } from \"./types\";\n\nimport { APIURL } from \"../config/vars\";\n\nexport const getPost = (postId) => (dispatch) => {\n  axios\n    .get(`${APIURL}posts/${postId}`)\n    .then((res) => {\n      dispatch({\n        type: GET_POST,\n        payload: res.data.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(console.log(err));\n    });\n};\n\nexport const getMyPosts = () => (dispatch, getState) => {\n  const user = getState().auth.user;\n  if (user) {\n    axios\n      .get(`${APIURL}posts?user=${user._id}`)\n      .then((res) => {\n        dispatch({\n          type: GET_MY_POSTS,\n          payload: res.data.data,\n        });\n      })\n      .catch((err) => {\n        dispatch(returnErrors(err.response.data, err.response.status));\n      });\n  }\n};\n\nexport const getPosts = () => (dispatch) => {\n  axios\n    .get(`${APIURL}posts`)\n    .then((res) => {\n      dispatch({\n        type: GET_POSTS,\n        payload: res.data.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n    });\n};\n\nexport const upVote = (post) => async (dispatch, getState) => {\n  const user = getState().auth;\n\n  const upVote = await axios.post(`${APIURL}votes/upvotepost`, {\n    post: post._id,\n    user: user.user._id,\n  });\n\n  if (upVote.data.success) {\n    // post was up voted\n    // Add to local up vote state\n    // remove from local down vote state if neccessary\n    console.log(\"upvoted\");\n  } else {\n    // remove from local up vote state\n    // remove up vote with put request\n    await axios.put(`${APIURL}votes/upvotepost`, {\n      post: post._id,\n      user: user.user._id,\n    });\n    console.log(\"removed down vote\");\n  }\n};\n"]},"metadata":{},"sourceType":"module"}