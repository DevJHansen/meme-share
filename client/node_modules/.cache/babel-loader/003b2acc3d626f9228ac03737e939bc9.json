{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Documents/Programming /meme-share/client/src/views/profile/MyPosts.jsx\";\nimport React, { useEffect } from \"react\";\nimport colors from \"../../config/colors\";\nimport globalStyles from \"../../config/globalStyles\";\nimport MyMemeCard from \"../../components/UI/MyMemeCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getMyPosts } from \"../../actions/postActions\";\n\nconst MyPosts = props => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getMyPosts());\n  }, [dispatch]);\n  const posts = useSelector(state => ({\n    posts: state.posts.myPosts\n  }), []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"My Posts\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, !posts.posts.length ? null : posts.posts.map((post, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.memeContainer,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MyMemeCard, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }));\n  })));\n};\n\nconst styles = {\n  container: {\n    width: \"100vw\"\n  },\n  heading: {\n    fontFamily: globalStyles.titleFont,\n    color: colors.secondary,\n    textAlign: \"center\"\n  },\n  posts: {\n    display: \"flex\",\n    flex: 12,\n    flexDirection: \"column\" // flexWrap: \"wrap\",\n    // justifyContent: \"space-between\",\n\n  },\n  memeContainer: {\n    flex: 3\n  }\n};\nexport default MyPosts;","map":{"version":3,"sources":["/Users/justin/Documents/Programming /meme-share/client/src/views/profile/MyPosts.jsx"],"names":["React","useEffect","colors","globalStyles","MyMemeCard","useDispatch","useSelector","getMyPosts","MyPosts","props","dispatch","posts","state","myPosts","styles","container","heading","length","map","post","i","memeContainer","width","fontFamily","titleFont","color","secondary","textAlign","display","flex","flexDirection"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,2BAA3B;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;AAIA,QAAMC,KAAK,GAAGL,WAAW,CACtBM,KAAD,KAAY;AACVD,IAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYE;AADT,GAAZ,CADuB,EAIvB,EAJuB,CAAzB;AAOA,sBACE;AAAK,IAAA,KAAK,EAAEC,MAAM,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,KAAK,EAAED,MAAM,CAACE,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,IAAA,KAAK,EAAEF,MAAM,CAACH,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACA,KAAK,CAACA,KAAN,CAAYM,MAAb,GACG,IADH,GAEGN,KAAK,CAACA,KAAN,CAAYO,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC3B,wBACE;AAAK,MAAA,KAAK,EAAEN,MAAM,CAACO,aAAnB;AAAkC,MAAA,GAAG,EAAED,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAED,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GAND,CAHN,CAFF,CADF;AAgBD,CA7BD;;AA+BA,MAAML,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTO,IAAAA,KAAK,EAAE;AADE,GADE;AAIbN,EAAAA,OAAO,EAAE;AACPO,IAAAA,UAAU,EAAEpB,YAAY,CAACqB,SADlB;AAEPC,IAAAA,KAAK,EAAEvB,MAAM,CAACwB,SAFP;AAGPC,IAAAA,SAAS,EAAE;AAHJ,GAJI;AASbhB,EAAAA,KAAK,EAAE;AACLiB,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,IAAI,EAAE,EAFD;AAGLC,IAAAA,aAAa,EAAE,QAHV,CAIL;AACA;;AALK,GATM;AAgBbT,EAAAA,aAAa,EAAE;AACbQ,IAAAA,IAAI,EAAE;AADO;AAhBF,CAAf;AAqBA,eAAerB,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport colors from \"../../config/colors\";\nimport globalStyles from \"../../config/globalStyles\";\nimport MyMemeCard from \"../../components/UI/MyMemeCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getMyPosts } from \"../../actions/postActions\";\n\nconst MyPosts = (props) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getMyPosts());\n  }, [dispatch]);\n\n  const posts = useSelector(\n    (state) => ({\n      posts: state.posts.myPosts,\n    }),\n    []\n  );\n\n  return (\n    <div style={styles.container}>\n      <h2 style={styles.heading}>My Posts</h2>\n      <div style={styles.posts}>\n        {!posts.posts.length\n          ? null\n          : posts.posts.map((post, i) => {\n              return (\n                <div style={styles.memeContainer} key={i}>\n                  <MyMemeCard post={post} />\n                </div>\n              );\n            })}\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    width: \"100vw\",\n  },\n  heading: {\n    fontFamily: globalStyles.titleFont,\n    color: colors.secondary,\n    textAlign: \"center\",\n  },\n  posts: {\n    display: \"flex\",\n    flex: 12,\n    flexDirection: \"column\",\n    // flexWrap: \"wrap\",\n    // justifyContent: \"space-between\",\n  },\n  memeContainer: {\n    flex: 3,\n  },\n};\n\nexport default MyPosts;\n"]},"metadata":{},"sourceType":"module"}