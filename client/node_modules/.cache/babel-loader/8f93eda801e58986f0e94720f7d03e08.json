{"ast":null,"code":"import axios from \"axios\";\nimport { returnErrors } from \"./errorActions\";\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS } from \"./types\";\nimport { APIURL } from \"../config/vars\";\nexport const login = token => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: token\n  };\n};\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\nexport const loadUser = () => (dispatch, getState) => {\n  dispatch({\n    type: USER_LOADING\n  });\n  const token = getState().auth.token;\n\n  if (token) {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    axios.get(`${APIURL}auth/me`, config).then(res => {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data.data\n      });\n    }).catch(err => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR\n      });\n    });\n  }\n};","map":{"version":3,"sources":["/Users/justin/Documents/Programming /meme-share/client/src/actions/authActions.js"],"names":["axios","returnErrors","USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","APIURL","login","token","type","payload","logout","loadUser","dispatch","getState","auth","config","headers","Authorization","get","then","res","data","catch","err","response","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SACEC,WADF,EAEEC,YAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,UALF,EAMEC,cANF,QAOO,SAPP;AASA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEN,aADD;AAELO,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,MAAM,GAAG,MAAM;AAC1B,SAAO;AACLF,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMO,QAAQ,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACpDD,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AAEA,QAAMO,KAAK,GAAGM,QAAQ,GAAGC,IAAX,CAAgBP,KAA9B;;AAEA,MAAIA,KAAJ,EAAW;AACT,UAAMQ,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASV,KAAM;AADxB;AADI,KAAf;AAKAV,IAAAA,KAAK,CACFqB,GADH,CACQ,GAAEb,MAAO,SADjB,EAC2BU,MAD3B,EAEGI,IAFH,CAESC,GAAD,IAAS;AACbR,MAAAA,QAAQ,CAAC;AACPJ,QAAAA,IAAI,EAAET,WADC;AAEPU,QAAAA,OAAO,EAAEW,GAAG,CAACC,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdX,MAAAA,QAAQ,CAACd,YAAY,CAACyB,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAR;AACAb,MAAAA,QAAQ,CAAC;AACPJ,QAAAA,IAAI,EAAEP;AADC,OAAD,CAAR;AAGD,KAbH;AAcD;AACF,CA1BM","sourcesContent":["import axios from \"axios\";\nimport { returnErrors } from \"./errorActions\";\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n} from \"./types\";\n\nimport { APIURL } from \"../config/vars\";\n\nexport const login = (token) => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: token,\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS,\n  };\n};\n\nexport const loadUser = () => (dispatch, getState) => {\n  dispatch({ type: USER_LOADING });\n\n  const token = getState().auth.token;\n\n  if (token) {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    axios\n      .get(`${APIURL}auth/me`, config)\n      .then((res) => {\n        dispatch({\n          type: USER_LOADED,\n          payload: res.data.data,\n        });\n      })\n      .catch((err) => {\n        dispatch(returnErrors(err.response.data, err.response.status));\n        dispatch({\n          type: AUTH_ERROR,\n        });\n      });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}