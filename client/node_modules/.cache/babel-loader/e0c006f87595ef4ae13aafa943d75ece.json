{"ast":null,"code":"import _slicedToArray from\"/Users/justin/Documents/Programming /meme-share/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import globalStyles from\"../../config/globalStyles\";import{useSelector,useDispatch}from\"react-redux\";import{getPosts,loadMorePosts}from\"../../actions/postActions\";import{useMediaPredicate}from\"react-media-hook\";import Loading from\"../../components/UI/Loading\";import MemeCard from\"../../components/UI/MemeCard\";import Button from\"../../components/UI/Button\";import Modal from\"../../components/UI/Modal\";import Link from\"../../components/UI/Link\";import Backdrop from\"../../components/UI/Backdrop\";import colors from\"../../config/colors\";import InfiniteScroll from\"react-infinite-scroll-component\";var Feed=function Feed(props){var dispatch=useDispatch();var biggerThan1024=useMediaPredicate(\"(min-width: 1024px)\");var biggerThan720=useMediaPredicate(\"(min-width: 720px)\");var _useState=useState(false),_useState2=_slicedToArray(_useState,2),toggleModal=_useState2[0],setToggleModal=_useState2[1];var category=props.category;var handleToggleModal=function handleToggleModal(){setToggleModal(!toggleModal);};useEffect(function(){if(category){dispatch(getPosts(category));}else{dispatch(getPosts());}},[dispatch,category]);var posts=useSelector(function(state){return{posts:state.posts.posts};},[]);var loadingPosts=useSelector(function(state){return{loadingPosts:state.posts.loadingPosts};},[]);if(!posts.posts.length){return/*#__PURE__*/React.createElement(\"div\",{style:globalStyles.fullScreenLoading},/*#__PURE__*/React.createElement(Loading,null));}var refreshPage=function refreshPage(){if(category){dispatch(getPosts(category));}else{dispatch(getPosts());}};var loadMore=function loadMore(){if(category){dispatch(loadMorePosts(category));}else{dispatch(loadMorePosts());}};var ModalBody=function ModalBody(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",{style:styles.modalMessage},\"You need to be signed in to interact with content on our site.\"),/*#__PURE__*/React.createElement(\"div\",{style:styles.modalBtnContainer},/*#__PURE__*/React.createElement(Link,{to:\"/login\"},/*#__PURE__*/React.createElement(Button,{title:\"Login\",style:{backgroundColor:colors.green,marginRight:10}})),/*#__PURE__*/React.createElement(Link,{to:\"/signup\"},/*#__PURE__*/React.createElement(Button,{title:\"Signup\",style:{backgroundColor:colors.tertiary}}))));};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(InfiniteScroll,{dataLength:posts.posts.length,next:function next(){return loadMore();},hasMore:true,refreshFunction:function refreshFunction(){return refreshPage();},pullDownToRefresh:true,pullDownToRefreshThreshold:50,pullDownToRefreshContent:/*#__PURE__*/React.createElement(\"h3\",{style:{textAlign:\"center\"}},\"\\u2193 Pull down to refresh\"),releaseToRefreshContent:/*#__PURE__*/React.createElement(\"h3\",{style:{textAlign:\"center\"}},\"\\u2191 Release to refresh\")},/*#__PURE__*/React.createElement(Modal,{header:/*#__PURE__*/React.createElement(\"h1\",null,\"Hey there!\"),body:/*#__PURE__*/React.createElement(ModalBody,null),close:handleToggleModal,isOpen:toggleModal}),toggleModal?/*#__PURE__*/React.createElement(Backdrop,null):null,biggerThan1024?/*#__PURE__*/React.createElement(\"div\",{style:styles.container},/*#__PURE__*/React.createElement(\"div\",{style:styles.content},posts.posts.map(function(post,i){return/*#__PURE__*/React.createElement(React.Fragment,{key:i},/*#__PURE__*/React.createElement(MemeCard,{toggleModal:handleToggleModal,post:post}));}))):biggerThan720?/*#__PURE__*/React.createElement(\"div\",{style:styles.mediumContainer},/*#__PURE__*/React.createElement(\"div\",{style:styles.content},posts.posts.map(function(post,i){return/*#__PURE__*/React.createElement(React.Fragment,{key:i},/*#__PURE__*/React.createElement(MemeCard,{toggleModal:handleToggleModal,post:post}));}))):/*#__PURE__*/React.createElement(\"div\",{style:styles.smallContainer},/*#__PURE__*/React.createElement(\"div\",{style:styles.content},posts.posts.map(function(post,i){return/*#__PURE__*/React.createElement(React.Fragment,{key:i},/*#__PURE__*/React.createElement(MemeCard,{toggleModal:handleToggleModal,post:post}));})))),/*#__PURE__*/React.createElement(\"div\",{style:styles.loading},loadingPosts.loadingPosts?/*#__PURE__*/React.createElement(Loading,null):null));};var styles={container:{marginLeft:\"35vw\",marginRight:\"35vw\",height:\"calc(100vh - 56px)\",marginTop:\"60px\",marginBottom:\"60px\",display:\"flex\",flexDirection:\"column\",paddingBottom:20},mediumContainer:{marginLeft:\"20vw\",marginRight:\"20vw\",height:\"calc(100vh - 56px)\",marginTop:\"60px\",marginBottom:\"60px\"},smallContainer:{marginLeft:\"5vw\",marginRight:\"5vw\",height:\"calc(100vh - 56px)\",marginTop:\"60px\",marginBottom:\"60px\"},content:{maxWidth:\"90vw\",display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",paddingBottom:20},modalMessage:{textAlign:\"center\"},modalBtnContainer:{display:\"flex\",justifyContent:\"center\"},loading:{width:\"100vw\",display:\"flex\",justifyContent:\"center\"}};export default Feed;","map":{"version":3,"sources":["/Users/justin/Documents/Programming /meme-share/client/src/views/feed/Feed.jsx"],"names":["React","useEffect","useState","globalStyles","useSelector","useDispatch","getPosts","loadMorePosts","useMediaPredicate","Loading","MemeCard","Button","Modal","Link","Backdrop","colors","InfiniteScroll","Feed","props","dispatch","biggerThan1024","biggerThan720","toggleModal","setToggleModal","category","handleToggleModal","posts","state","loadingPosts","length","fullScreenLoading","refreshPage","loadMore","ModalBody","styles","modalMessage","modalBtnContainer","backgroundColor","green","marginRight","tertiary","textAlign","container","content","map","post","i","mediumContainer","smallContainer","loading","marginLeft","height","marginTop","marginBottom","display","flexDirection","paddingBottom","maxWidth","justifyContent","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport globalStyles from \"../../config/globalStyles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getPosts, loadMorePosts } from \"../../actions/postActions\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport Loading from \"../../components/UI/Loading\";\nimport MemeCard from \"../../components/UI/MemeCard\";\nimport Button from \"../../components/UI/Button\";\nimport Modal from \"../../components/UI/Modal\";\nimport Link from \"../../components/UI/Link\";\nimport Backdrop from \"../../components/UI/Backdrop\";\nimport colors from \"../../config/colors\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst Feed = (props) => {\n  const dispatch = useDispatch();\n  const biggerThan1024 = useMediaPredicate(\"(min-width: 1024px)\");\n  const biggerThan720 = useMediaPredicate(\"(min-width: 720px)\");\n  const [toggleModal, setToggleModal] = useState(false);\n\n  const { category } = props;\n\n  const handleToggleModal = () => {\n    setToggleModal(!toggleModal);\n  };\n\n  useEffect(() => {\n    if (category) {\n      dispatch(getPosts(category));\n    } else {\n      dispatch(getPosts());\n    }\n  }, [dispatch, category]);\n\n  const posts = useSelector(\n    (state) => ({\n      posts: state.posts.posts,\n    }),\n    []\n  );\n\n  const loadingPosts = useSelector(\n    (state) => ({\n      loadingPosts: state.posts.loadingPosts,\n    }),\n    []\n  );\n\n  if (!posts.posts.length) {\n    return (\n      <div style={globalStyles.fullScreenLoading}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const refreshPage = () => {\n    if (category) {\n      dispatch(getPosts(category));\n    } else {\n      dispatch(getPosts());\n    }\n  };\n\n  const loadMore = () => {\n    if (category) {\n      dispatch(loadMorePosts(category));\n    } else {\n      dispatch(loadMorePosts());\n    }\n  };\n\n  const ModalBody = () => {\n    return (\n      <div>\n        <h4 style={styles.modalMessage}>\n          You need to be signed in to interact with content on our site.\n        </h4>\n        <div style={styles.modalBtnContainer}>\n          <Link to=\"/login\">\n            <Button\n              title=\"Login\"\n              style={{ backgroundColor: colors.green, marginRight: 10 }}\n            />\n          </Link>\n          <Link to=\"/signup\">\n            <Button\n              title=\"Signup\"\n              style={{ backgroundColor: colors.tertiary }}\n            />\n          </Link>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <InfiniteScroll\n        dataLength={posts.posts.length}\n        next={() => loadMore()}\n        hasMore={true}\n        refreshFunction={() => refreshPage()}\n        pullDownToRefresh\n        pullDownToRefreshThreshold={50}\n        pullDownToRefreshContent={\n          <h3 style={{ textAlign: \"center\" }}>&#8595; Pull down to refresh</h3>\n        }\n        releaseToRefreshContent={\n          <h3 style={{ textAlign: \"center\" }}>&#8593; Release to refresh</h3>\n        }\n      >\n        <Modal\n          header={<h1>Hey there!</h1>}\n          body={<ModalBody />}\n          close={handleToggleModal}\n          isOpen={toggleModal}\n        />\n        {toggleModal ? <Backdrop /> : null}\n        {biggerThan1024 ? (\n          <div style={styles.container}>\n            <div style={styles.content}>\n              {posts.posts.map((post, i) => {\n                return (\n                  <React.Fragment key={i}>\n                    <MemeCard toggleModal={handleToggleModal} post={post} />\n                  </React.Fragment>\n                );\n              })}\n            </div>\n          </div>\n        ) : biggerThan720 ? (\n          <div style={styles.mediumContainer}>\n            <div style={styles.content}>\n              {posts.posts.map((post, i) => {\n                return (\n                  <React.Fragment key={i}>\n                    <MemeCard toggleModal={handleToggleModal} post={post} />\n                  </React.Fragment>\n                );\n              })}\n            </div>\n          </div>\n        ) : (\n          <div style={styles.smallContainer}>\n            <div style={styles.content}>\n              {posts.posts.map((post, i) => {\n                return (\n                  <React.Fragment key={i}>\n                    <MemeCard toggleModal={handleToggleModal} post={post} />\n                  </React.Fragment>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </InfiniteScroll>\n      <div style={styles.loading}>\n        {loadingPosts.loadingPosts ? <Loading /> : null}\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst styles = {\n  container: {\n    marginLeft: \"35vw\",\n    marginRight: \"35vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingBottom: 20,\n  },\n  mediumContainer: {\n    marginLeft: \"20vw\",\n    marginRight: \"20vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\",\n  },\n  smallContainer: {\n    marginLeft: \"5vw\",\n    marginRight: \"5vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\",\n  },\n  content: {\n    maxWidth: \"90vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    paddingBottom: 20,\n  },\n  modalMessage: {\n    textAlign: \"center\",\n  },\n  modalBtnContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  loading: {\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n};\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}