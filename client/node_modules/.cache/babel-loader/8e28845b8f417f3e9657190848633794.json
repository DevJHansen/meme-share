{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Documents/Programming /meme-share/client/src/views/home/All.jsx\";\nimport React, { useEffect } from \"react\";\nimport globalStyles from \"../../config/globalStyles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getPosts } from \"../../actions/postActions\";\nimport Loading from \"../../components/UI/Loading\";\n\nconst All = props => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n  const posts = useSelector(state => ({\n    posts: state.posts.posts\n  }), []);\n\n  if (!posts.posts) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: globalStyles.fullScreenLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, posts.posts.map((post, i) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, post.title));\n  })));\n};\n\nconst styles = {\n  container: {\n    paddingLeft: \"10vw\",\n    paddingRight: \"10vw\",\n    minHeight: \"100vh\"\n  },\n  content: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n};\nexport default All;","map":{"version":3,"sources":["/Users/justin/Documents/Programming /meme-share/client/src/views/home/All.jsx"],"names":["React","useEffect","globalStyles","useSelector","useDispatch","getPosts","Loading","All","props","dispatch","posts","state","fullScreenLoading","styles","container","content","map","post","i","title","paddingLeft","paddingRight","minHeight","display","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACJ,QAAQ,EAAT,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;AAIA,QAAMC,KAAK,GAAGP,WAAW,CACtBQ,KAAD,KAAY;AACVD,IAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYA;AADT,GAAZ,CADuB,EAIvB,EAJuB,CAAzB;;AAOA,MAAI,CAACA,KAAK,CAACA,KAAX,EAAkB;AAChB,wBACE;AAAK,MAAA,KAAK,EAAER,YAAY,CAACU,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAED,sBACE;AAAK,IAAA,KAAK,EAAEC,MAAM,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAED,MAAM,CAACE,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACA,KAAN,CAAYM,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5B,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEA,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,IAAI,CAACE,KAAX,CADF,CADF;AAKD,GANA,CADH,CADF,CADF;AAaD,CAlCD;;AAoCA,MAAMN,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTM,IAAAA,WAAW,EAAE,MADJ;AAETC,IAAAA,YAAY,EAAE,MAFL;AAGTC,IAAAA,SAAS,EAAE;AAHF,GADE;AAMbP,EAAAA,OAAO,EAAE;AACPQ,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,cAAc,EAAE;AAFT;AANI,CAAf;AAYA,eAAejB,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport globalStyles from \"../../config/globalStyles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getPosts } from \"../../actions/postActions\";\nimport Loading from \"../../components/UI/Loading\";\n\nconst All = (props) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n\n  const posts = useSelector(\n    (state) => ({\n      posts: state.posts.posts,\n    }),\n    []\n  );\n\n  if (!posts.posts) {\n    return (\n      <div style={globalStyles.fullScreenLoading}>\n        <Loading />\n      </div>\n    );\n  }\n\n  return (\n    <div style={styles.container}>\n      <div style={styles.content}>\n        {posts.posts.map((post, i) => {\n          return (\n            <React.Fragment key={i}>\n              <div>{post.title}</div>\n            </React.Fragment>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    paddingLeft: \"10vw\",\n    paddingRight: \"10vw\",\n    minHeight: \"100vh\",\n  },\n  content: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n};\n\nexport default All;\n"]},"metadata":{},"sourceType":"module"}