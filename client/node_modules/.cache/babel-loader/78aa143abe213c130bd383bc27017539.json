{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Documents/Programming /meme-share/client/src/components/UI/FullMemeCard.jsx\";\nimport React, { useState } from \"react\";\nimport globalStyles from \"../../config/globalStyles\";\nimport colors from \"../../config/colors\";\nimport { MdKeyboardArrowUp, MdKeyboardArrowDown } from \"react-icons/md\";\nimport Link from \"../UI/Link\";\nimport TextArea from \"../UI/TextArea\";\nimport Button from \"../UI/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { postPageUpVote, postPageDownVote, getComments } from \"../../actions/postActions\";\nimport axios from \"axios\";\nimport { APIURL } from \"../../config/vars\";\nimport { store } from \"react-notifications-component\";\n\nconst FullMemeCard = props => {\n  const [newComment, setNewComment] = useState(\"\");\n  const dispatch = useDispatch();\n  const {\n    post,\n    toggleModal,\n    comments\n  } = props;\n  const auth = useSelector(state => ({\n    auth: state.auth\n  }), []);\n  const checkUpvote = post.upVotes.find(upVote => upVote === auth.auth.userId);\n\n  const upVotePost = post => {\n    if (!auth.auth.user) {\n      toggleModal();\n    } else {\n      dispatch(postPageUpVote(post));\n    }\n  };\n\n  const checkDownvote = post.downVotes.find(downVote => downVote === auth.auth.userId);\n\n  const downVotePost = post => {\n    if (!auth.auth.user) {\n      toggleModal();\n    } else {\n      dispatch(postPageDownVote(post));\n    }\n  };\n\n  const handleComment = () => {\n    if (!auth.auth.user) {\n      toggleModal();\n      return;\n    }\n\n    if (!newComment) {\n      store.addNotification({\n        title: \"Error!\",\n        message: \"Comments can't be empty\",\n        type: \"danger\",\n        insert: \"top\",\n        container: \"top-center\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true\n        }\n      });\n      return;\n    }\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${auth.auth.token}`\n      }\n    };\n    const body = {\n      post: post._id,\n      comment: newComment,\n      user: auth.auth.user._id,\n      name: auth.auth.user.name\n    };\n    axios.post(`${APIURL}posts/${post._id}/comments`, body, config).then(() => {\n      dispatch(getComments(post._id));\n    }).catch(() => {\n      store.addNotification({\n        title: \"Error!\",\n        message: \"Something went wrong uploading your comment\",\n        type: \"danger\",\n        insert: \"top\",\n        container: \"top-center\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: { ...styles.category,\n      ...globalStyles.hint\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, post.category.charAt(0).toUpperCase() + post.category.slice(1)), /*#__PURE__*/React.createElement(Link, {\n    to: `post/${post._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, post.title)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, post.content.endsWith(\"mp4\") || post.content.endsWith(\"ogg\") || post.content.endsWith(\"webm\") ? /*#__PURE__*/React.createElement(\"video\", {\n    src: post.content,\n    style: styles.content,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: post.content,\n    style: styles.content,\n    alt: post.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.interactions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.interaction,\n    onClick: () => upVotePost(post),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, !auth.auth.isAuthenticated ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MdKeyboardArrowUp, {\n    style: globalStyles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.interactionNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, post.upVotes.length)) : checkUpvote ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MdKeyboardArrowUp, {\n    style: { ...globalStyles.icon,\n      color: colors.green\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: { ...styles.interactionNumber,\n      color: colors.green\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, post.upVotes.length)) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MdKeyboardArrowUp, {\n    style: globalStyles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.interactionNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, post.upVotes.length))), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.interaction,\n    onClick: () => downVotePost(post),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, !auth.auth.isAuthenticated ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MdKeyboardArrowDown, {\n    style: globalStyles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.interactionNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, post.downVotes.length)) : checkDownvote ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MdKeyboardArrowDown, {\n    style: { ...globalStyles.icon,\n      color: colors.tertiary\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: { ...styles.interactionNumber,\n      color: colors.tertiary\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, post.downVotes.length)) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MdKeyboardArrowDown, {\n    style: globalStyles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.interactionNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, post.downVotes.length)))), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.commentsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, `Comments (${comments.length})`), /*#__PURE__*/React.createElement(TextArea, {\n    value: newComment,\n    onChange: e => setNewComment(e.target.value),\n    placeholder: \"Add comment...\",\n    style: styles.textArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: styles.postBtn,\n    title: \"Post\",\n    handlePress: handleComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, comments.map((comment, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, comment.name), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }, comment.comment));\n  })));\n};\n\nconst styles = {\n  card: {\n    backgroundColor: \"white\",\n    marginTop: 20,\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingRight: 20,\n    paddingLeft: 20,\n    borderRadius: globalStyles.borderRadius,\n    boxShadow: globalStyles.boxShadowDark,\n    maxWidth: \"100%\"\n  },\n  title: {\n    marginTop: 10,\n    marginBottom: 10\n  },\n  category: {\n    marginTop: 0,\n    marginBottom: 10\n  },\n  content: {\n    width: \"100%\",\n    height: \"auto\"\n  },\n  interactions: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: 10,\n    marginBottom: 10\n  },\n  interaction: {\n    borderRadius: globalStyles.borderRadius,\n    boxShadow: globalStyles.boxShadow,\n    paddingLeft: 10,\n    paddingRight: 10,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    cursor: \"pointer\"\n  },\n  interactionNumber: {\n    marginLeft: 5\n  },\n  textArea: {\n    border: `1px solid black`,\n    width: \"100%\"\n  },\n  postBtn: {\n    marginTop: 15,\n    backgroundColor: colors.tertiary\n  },\n  comments: {\n    marginTop: 20,\n    paddingTop: 20,\n    borderTop: \"1px solid grey\"\n  }\n};\nexport default FullMemeCard;","map":{"version":3,"sources":["/Users/justin/Documents/Programming /meme-share/client/src/components/UI/FullMemeCard.jsx"],"names":["React","useState","globalStyles","colors","MdKeyboardArrowUp","MdKeyboardArrowDown","Link","TextArea","Button","useSelector","useDispatch","postPageUpVote","postPageDownVote","getComments","axios","APIURL","store","FullMemeCard","props","newComment","setNewComment","dispatch","post","toggleModal","comments","auth","state","checkUpvote","upVotes","find","upVote","userId","upVotePost","user","checkDownvote","downVotes","downVote","downVotePost","handleComment","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","config","headers","Authorization","token","body","_id","comment","name","then","catch","styles","card","category","hint","charAt","toUpperCase","slice","content","endsWith","interactions","interaction","isAuthenticated","icon","interactionNumber","length","color","green","tertiary","commentsContainer","e","target","value","textArea","postBtn","map","i","backgroundColor","marginTop","paddingTop","paddingBottom","paddingRight","paddingLeft","borderRadius","boxShadow","boxShadowDark","maxWidth","marginBottom","width","height","display","flexDirection","justifyContent","alignItems","cursor","marginLeft","border","borderTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport globalStyles from \"../../config/globalStyles\";\nimport colors from \"../../config/colors\";\nimport { MdKeyboardArrowUp, MdKeyboardArrowDown } from \"react-icons/md\";\nimport Link from \"../UI/Link\";\nimport TextArea from \"../UI/TextArea\";\nimport Button from \"../UI/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  postPageUpVote,\n  postPageDownVote,\n  getComments,\n} from \"../../actions/postActions\";\nimport axios from \"axios\";\nimport { APIURL } from \"../../config/vars\";\nimport { store } from \"react-notifications-component\";\n\nconst FullMemeCard = (props) => {\n  const [newComment, setNewComment] = useState(\"\");\n  const dispatch = useDispatch();\n  const { post, toggleModal, comments } = props;\n\n  const auth = useSelector(\n    (state) => ({\n      auth: state.auth,\n    }),\n    []\n  );\n\n  const checkUpvote = post.upVotes.find(\n    (upVote) => upVote === auth.auth.userId\n  );\n\n  const upVotePost = (post) => {\n    if (!auth.auth.user) {\n      toggleModal();\n    } else {\n      dispatch(postPageUpVote(post));\n    }\n  };\n\n  const checkDownvote = post.downVotes.find(\n    (downVote) => downVote === auth.auth.userId\n  );\n\n  const downVotePost = (post) => {\n    if (!auth.auth.user) {\n      toggleModal();\n    } else {\n      dispatch(postPageDownVote(post));\n    }\n  };\n\n  const handleComment = () => {\n    if (!auth.auth.user) {\n      toggleModal();\n      return;\n    }\n    if (!newComment) {\n      store.addNotification({\n        title: \"Error!\",\n        message: \"Comments can't be empty\",\n        type: \"danger\",\n        insert: \"top\",\n        container: \"top-center\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true,\n        },\n      });\n      return;\n    }\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${auth.auth.token}`,\n      },\n    };\n\n    const body = {\n      post: post._id,\n      comment: newComment,\n      user: auth.auth.user._id,\n      name: auth.auth.user.name,\n    };\n\n    axios\n      .post(`${APIURL}posts/${post._id}/comments`, body, config)\n      .then(() => {\n        dispatch(getComments(post._id));\n      })\n      .catch(() => {\n        store.addNotification({\n          title: \"Error!\",\n          message: \"Something went wrong uploading your comment\",\n          type: \"danger\",\n          insert: \"top\",\n          container: \"top-center\",\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n          dismiss: {\n            duration: 5000,\n            onScreen: true,\n          },\n        });\n      });\n  };\n\n  return (\n    <div style={styles.card}>\n      <p style={{ ...styles.category, ...globalStyles.hint }}>\n        {post.category.charAt(0).toUpperCase() + post.category.slice(1)}\n      </p>\n      <Link to={`post/${post._id}`}>\n        <h3 style={styles.title}>{post.title}</h3>\n      </Link>\n      <div>\n        {post.content.endsWith(\"mp4\") ||\n        post.content.endsWith(\"ogg\") ||\n        post.content.endsWith(\"webm\") ? (\n          <video src={post.content} style={styles.content} controls />\n        ) : (\n          <img src={post.content} style={styles.content} alt={post.title} />\n        )}\n      </div>\n      <div style={styles.interactions}>\n        <div style={styles.interaction} onClick={() => upVotePost(post)}>\n          {!auth.auth.isAuthenticated ? (\n            <React.Fragment>\n              <MdKeyboardArrowUp style={globalStyles.icon} />\n              <p style={styles.interactionNumber}>{post.upVotes.length}</p>\n            </React.Fragment>\n          ) : checkUpvote ? (\n            <React.Fragment>\n              <MdKeyboardArrowUp\n                style={{ ...globalStyles.icon, color: colors.green }}\n              />\n              <p style={{ ...styles.interactionNumber, color: colors.green }}>\n                {post.upVotes.length}\n              </p>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <MdKeyboardArrowUp style={globalStyles.icon} />\n              <p style={styles.interactionNumber}>{post.upVotes.length}</p>\n            </React.Fragment>\n          )}\n        </div>\n        <div style={styles.interaction} onClick={() => downVotePost(post)}>\n          {!auth.auth.isAuthenticated ? (\n            <React.Fragment>\n              <MdKeyboardArrowDown style={globalStyles.icon} />\n              <p style={styles.interactionNumber}>{post.downVotes.length}</p>\n            </React.Fragment>\n          ) : checkDownvote ? (\n            <React.Fragment>\n              <MdKeyboardArrowDown\n                style={{ ...globalStyles.icon, color: colors.tertiary }}\n              />\n              <p\n                style={{ ...styles.interactionNumber, color: colors.tertiary }}\n              >\n                {post.downVotes.length}\n              </p>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <MdKeyboardArrowDown style={globalStyles.icon} />\n              <p style={styles.interactionNumber}>{post.downVotes.length}</p>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n      <div style={styles.commentsContainer}>\n        <h3>{`Comments (${comments.length})`}</h3>\n        <TextArea\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n          placeholder=\"Add comment...\"\n          style={styles.textArea}\n        />\n        <Button\n          style={styles.postBtn}\n          title=\"Post\"\n          handlePress={handleComment}\n        />\n      </div>\n      <div style={styles.comments}>\n        {comments.map((comment, i) => {\n          return (\n            <div key={i}>\n              <p>{comment.name}</p>\n              <h5>{comment.comment}</h5>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  card: {\n    backgroundColor: \"white\",\n    marginTop: 20,\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingRight: 20,\n    paddingLeft: 20,\n    borderRadius: globalStyles.borderRadius,\n    boxShadow: globalStyles.boxShadowDark,\n    maxWidth: \"100%\",\n  },\n  title: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  category: {\n    marginTop: 0,\n    marginBottom: 10,\n  },\n  content: {\n    width: \"100%\",\n    height: \"auto\",\n  },\n  interactions: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  interaction: {\n    borderRadius: globalStyles.borderRadius,\n    boxShadow: globalStyles.boxShadow,\n    paddingLeft: 10,\n    paddingRight: 10,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n  },\n  interactionNumber: {\n    marginLeft: 5,\n  },\n  textArea: {\n    border: `1px solid black`,\n    width: \"100%\",\n  },\n  postBtn: {\n    marginTop: 15,\n    backgroundColor: colors.tertiary,\n  },\n  comments: {\n    marginTop: 20,\n    paddingTop: 20,\n    borderTop: \"1px solid grey\",\n  },\n};\n\nexport default FullMemeCard;\n"]},"metadata":{},"sourceType":"module"}