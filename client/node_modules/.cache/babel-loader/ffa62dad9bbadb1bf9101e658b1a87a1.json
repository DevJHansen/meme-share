{"ast":null,"code":"import axios from\"axios\";import{returnErrors}from\"./errorActions\";import{USER_LOADED,USER_LOADING,AUTH_ERROR,LOGIN_SUCCESS// LOGIN_FAIL,\n,LOGOUT_SUCCESS}from\"./types\";import{APIURL}from\"../config/vars\";export var login=function login(token){return{type:LOGIN_SUCCESS,payload:token};};export var logout=function logout(){return{type:LOGOUT_SUCCESS};};export var loadUser=function loadUser(){return function(dispatch,getState){dispatch({type:USER_LOADING});var token=getState().auth.token;if(token){var config={headers:{Authorization:\"Bearer \".concat(token)}};axios.get(\"\".concat(APIURL,\"auth/me\"),config).then(function(res){dispatch({type:USER_LOADED,payload:res.data.data,id:res.data.data._id});}).catch(function(err){dispatch(returnErrors(err.response.data,err.response.status));dispatch({type:AUTH_ERROR});});}};};","map":{"version":3,"sources":["/Users/justin/Documents/Programming /meme-share/client/src/actions/authActions.js"],"names":["axios","returnErrors","USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_SUCCESS","LOGOUT_SUCCESS","APIURL","login","token","type","payload","logout","loadUser","dispatch","getState","auth","config","headers","Authorization","get","then","res","data","id","_id","catch","err","response","status"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,YAAT,KAA6B,gBAA7B,CAEA,OACEC,WADF,CAEEC,YAFF,CAGEC,UAHF,CAIEC,aACA;AALF,CAMEC,cANF,KAOO,SAPP,CASA,OAASC,MAAT,KAAuB,gBAAvB,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CAC9B,MAAO,CACLC,IAAI,CAAEL,aADD,CAELM,OAAO,CAAEF,KAFJ,CAAP,CAID,CALM,CAOP,MAAO,IAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CAC1B,MAAO,CACLF,IAAI,CAAEJ,cADD,CAAP,CAGD,CAJM,CAMP,MAAO,IAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAM,UAACC,QAAD,CAAWC,QAAX,CAAwB,CACpDD,QAAQ,CAAC,CAAEJ,IAAI,CAAEP,YAAR,CAAD,CAAR,CAEA,GAAMM,CAAAA,KAAK,CAAGM,QAAQ,GAAGC,IAAX,CAAgBP,KAA9B,CAEA,GAAIA,KAAJ,CAAW,CACT,GAAMQ,CAAAA,MAAM,CAAG,CACbC,OAAO,CAAE,CACPC,aAAa,kBAAYV,KAAZ,CADN,CADI,CAAf,CAKAT,KAAK,CACFoB,GADH,WACUb,MADV,YAC2BU,MAD3B,EAEGI,IAFH,CAEQ,SAACC,GAAD,CAAS,CACbR,QAAQ,CAAC,CACPJ,IAAI,CAAER,WADC,CAEPS,OAAO,CAAEW,GAAG,CAACC,IAAJ,CAASA,IAFX,CAGPC,EAAE,CAAEF,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcE,GAHX,CAAD,CAAR,CAKD,CARH,EASGC,KATH,CASS,SAACC,GAAD,CAAS,CACdb,QAAQ,CAACb,YAAY,CAAC0B,GAAG,CAACC,QAAJ,CAAaL,IAAd,CAAoBI,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAR,CACAf,QAAQ,CAAC,CACPJ,IAAI,CAAEN,UADC,CAAD,CAAR,CAGD,CAdH,EAeD,CACF,CA3BuB,EAAjB","sourcesContent":["import axios from \"axios\";\nimport { returnErrors } from \"./errorActions\";\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  // LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n} from \"./types\";\n\nimport { APIURL } from \"../config/vars\";\n\nexport const login = (token) => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: token,\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS,\n  };\n};\n\nexport const loadUser = () => (dispatch, getState) => {\n  dispatch({ type: USER_LOADING });\n\n  const token = getState().auth.token;\n\n  if (token) {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    axios\n      .get(`${APIURL}auth/me`, config)\n      .then((res) => {\n        dispatch({\n          type: USER_LOADED,\n          payload: res.data.data,\n          id: res.data.data._id,\n        });\n      })\n      .catch((err) => {\n        dispatch(returnErrors(err.response.data, err.response.status));\n        dispatch({\n          type: AUTH_ERROR,\n        });\n      });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}