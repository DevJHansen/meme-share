{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Documents/Programming /meme-share/client/src/views/home/All.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport globalStyles from \"../../config/globalStyles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getPosts } from \"../../actions/postActions\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport Loading from \"../../components/UI/Loading\";\nimport MemeCard from \"../../components/UI/MemeCard\";\nimport Modal from \"../../components/UI/Modal\";\n\nconst All = props => {\n  const dispatch = useDispatch();\n  const biggerThan1024 = useMediaPredicate(\"(min-width: 1024px)\");\n  const biggerThan720 = useMediaPredicate(\"(min-width: 720px)\");\n  const [toggleModal, setToggleModal] = useState(true);\n\n  const handleToggleModal = () => {\n    setToggleModal(!toggleModal);\n  };\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n  const posts = useSelector(state => ({\n    posts: state.posts.posts\n  }), []);\n\n  if (!posts.posts.length) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: globalStyles.fullScreenLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  const ModalBody = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Meme Share aims to be the internet's number one source for all the latest and greatest memes! If you're interested in interacting with our wonderful community, you can sign up for free down below!\"));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    header: /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Hey there!\"),\n    body: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, \"Modal\"),\n    close: handleToggleModal,\n    isOpen: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), biggerThan1024 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, posts.posts.map((post, i) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MemeCard, {\n      toggleModal: handleToggleModal,\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }));\n  }))) : biggerThan720 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.mediumContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, posts.posts.map((post, i) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MemeCard, {\n      toggleModal: handleToggleModal,\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }));\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.smallContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, posts.posts.map((post, i) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MemeCard, {\n      toggleModal: handleToggleModal,\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }));\n  }))));\n};\n\nconst styles = {\n  container: {\n    marginLeft: \"35vw\",\n    marginRight: \"35vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"56px\"\n  },\n  mediumContainer: {\n    marginLeft: \"20vw\",\n    marginRight: \"20vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"56px\"\n  },\n  smallContainer: {\n    marginLeft: \"5vw\",\n    marginRight: \"5vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"56px\"\n  },\n  content: {\n    maxWidth: \"90vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    paddingBottom: 20\n  }\n};\nexport default All;","map":{"version":3,"sources":["/Users/justin/Documents/Programming /meme-share/client/src/views/home/All.jsx"],"names":["React","useEffect","useState","globalStyles","useSelector","useDispatch","getPosts","useMediaPredicate","Loading","MemeCard","Modal","All","props","dispatch","biggerThan1024","biggerThan720","toggleModal","setToggleModal","handleToggleModal","posts","state","length","fullScreenLoading","ModalBody","styles","container","content","map","post","i","mediumContainer","smallContainer","marginLeft","marginRight","height","marginTop","maxWidth","display","flexDirection","justifyContent","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport globalStyles from \"../../config/globalStyles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getPosts } from \"../../actions/postActions\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport Loading from \"../../components/UI/Loading\";\nimport MemeCard from \"../../components/UI/MemeCard\";\nimport Modal from \"../../components/UI/Modal\";\n\nconst All = (props) => {\n  const dispatch = useDispatch();\n  const biggerThan1024 = useMediaPredicate(\"(min-width: 1024px)\");\n  const biggerThan720 = useMediaPredicate(\"(min-width: 720px)\");\n  const [toggleModal, setToggleModal] = useState(true);\n\n  const handleToggleModal = () => {\n    setToggleModal(!toggleModal);\n  };\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n\n  const posts = useSelector(\n    (state) => ({\n      posts: state.posts.posts,\n    }),\n    []\n  );\n\n  if (!posts.posts.length) {\n    return (\n      <div style={globalStyles.fullScreenLoading}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const ModalBody = () => {\n    return (\n      <div>\n        <p>\n          Meme Share aims to be the internet's number one source for all the\n          latest and greatest memes! If you're interested in interacting with\n          our wonderful community, you can sign up for free down below!\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <Modal\n        header={<h1>Hey there!</h1>}\n        body={<p>Modal</p>}\n        close={handleToggleModal}\n        isOpen={toggleModal}\n      />\n      {biggerThan1024 ? (\n        <div style={styles.container}>\n          <div style={styles.content}>\n            {posts.posts.map((post, i) => {\n              return (\n                <React.Fragment key={i}>\n                  <MemeCard toggleModal={handleToggleModal} post={post} />\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </div>\n      ) : biggerThan720 ? (\n        <div style={styles.mediumContainer}>\n          <div style={styles.content}>\n            {posts.posts.map((post, i) => {\n              return (\n                <React.Fragment key={i}>\n                  <MemeCard toggleModal={handleToggleModal} post={post} />\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </div>\n      ) : (\n        <div style={styles.smallContainer}>\n          <div style={styles.content}>\n            {posts.posts.map((post, i) => {\n              return (\n                <React.Fragment key={i}>\n                  <MemeCard toggleModal={handleToggleModal} post={post} />\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst styles = {\n  container: {\n    marginLeft: \"35vw\",\n    marginRight: \"35vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"56px\",\n  },\n  mediumContainer: {\n    marginLeft: \"20vw\",\n    marginRight: \"20vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"56px\",\n  },\n  smallContainer: {\n    marginLeft: \"5vw\",\n    marginRight: \"5vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"56px\",\n  },\n  content: {\n    maxWidth: \"90vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    paddingBottom: 20,\n  },\n};\n\nexport default All;\n"]},"metadata":{},"sourceType":"module"}