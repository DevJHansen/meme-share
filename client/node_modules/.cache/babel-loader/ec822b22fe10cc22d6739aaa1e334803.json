{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Documents/Programming /meme-share/client/src/views/feed/Feed.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport globalStyles from \"../../config/globalStyles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getPosts, loadMorePosts } from \"../../actions/postActions\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport Loading from \"../../components/UI/Loading\";\nimport MemeCard from \"../../components/UI/MemeCard\";\nimport Button from \"../../components/UI/Button\";\nimport Modal from \"../../components/UI/Modal\";\nimport Link from \"../../components/UI/Link\";\nimport Backdrop from \"../../components/UI/Backdrop\";\nimport colors from \"../../config/colors\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst All = props => {\n  const dispatch = useDispatch();\n  const biggerThan1024 = useMediaPredicate(\"(min-width: 1024px)\");\n  const biggerThan720 = useMediaPredicate(\"(min-width: 720px)\");\n  const [toggleModal, setToggleModal] = useState(false);\n  const {\n    category\n  } = props;\n\n  const handleToggleModal = () => {\n    setToggleModal(!toggleModal);\n  };\n\n  useEffect(() => {\n    if (category) {\n      dispatch(getPosts(category));\n    } else {\n      dispatch(getPosts());\n    }\n  }, [dispatch, category]);\n  const posts = useSelector(state => ({\n    posts: state.posts.posts\n  }), []);\n  const loadingPosts = useSelector(state => ({\n    loadingPosts: state.posts.loadingPosts\n  }), []);\n\n  if (!posts.posts.length) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: globalStyles.fullScreenLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  const refreshPage = () => {\n    if (category) {\n      dispatch(getPosts(category));\n    } else {\n      dispatch(getPosts());\n    }\n  };\n\n  const loadMore = () => {\n    if (category) {\n      dispatch(loadMorePosts(category));\n    } else {\n      dispatch(loadMorePosts());\n    }\n  };\n\n  const ModalBody = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: styles.modalMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"You need to be signed in to interact with content on our site.\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.modalBtnContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: \"Login\",\n      style: {\n        backgroundColor: colors.green,\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: \"Signup\",\n      style: {\n        backgroundColor: colors.tertiary\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: posts.posts.length,\n    next: () => loadMore(),\n    hasMore: true,\n    refreshFunction: () => refreshPage(),\n    pullDownToRefresh: true,\n    pullDownToRefreshThreshold: 50,\n    pullDownToRefreshContent: /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"\\u2193 Pull down to refresh\"),\n    releaseToRefreshContent: /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"\\u2191 Release to refresh\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    header: /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, \"Hey there!\"),\n    body: /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }),\n    close: handleToggleModal,\n    isOpen: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), toggleModal ? /*#__PURE__*/React.createElement(Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 24\n    }\n  }) : null, biggerThan1024 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, posts.posts.map((post, i) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MemeCard, {\n      toggleModal: handleToggleModal,\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }));\n  }))) : biggerThan720 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.mediumContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, posts.posts.map((post, i) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MemeCard, {\n      toggleModal: handleToggleModal,\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }));\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.smallContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, posts.posts.map((post, i) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MemeCard, {\n      toggleModal: handleToggleModal,\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, loadingPosts.loadingPosts ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 38\n    }\n  }) : null));\n};\n\nconst styles = {\n  container: {\n    marginLeft: \"35vw\",\n    marginRight: \"35vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  mediumContainer: {\n    marginLeft: \"20vw\",\n    marginRight: \"20vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\"\n  },\n  smallContainer: {\n    marginLeft: \"5vw\",\n    marginRight: \"5vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\"\n  },\n  content: {\n    maxWidth: \"90vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    paddingBottom: 20\n  },\n  modalMessage: {\n    textAlign: \"center\"\n  },\n  modalBtnContainer: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  loading: {\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n};\nexport default All;","map":{"version":3,"sources":["/Users/justin/Documents/Programming /meme-share/client/src/views/feed/Feed.jsx"],"names":["React","useEffect","useState","globalStyles","useSelector","useDispatch","getPosts","loadMorePosts","useMediaPredicate","Loading","MemeCard","Button","Modal","Link","Backdrop","colors","InfiniteScroll","All","props","dispatch","biggerThan1024","biggerThan720","toggleModal","setToggleModal","category","handleToggleModal","posts","state","loadingPosts","length","fullScreenLoading","refreshPage","loadMore","ModalBody","styles","modalMessage","modalBtnContainer","backgroundColor","green","marginRight","tertiary","textAlign","container","content","map","post","i","mediumContainer","smallContainer","loading","marginLeft","height","marginTop","marginBottom","display","flexDirection","maxWidth","justifyContent","paddingBottom","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,2BAAxC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,cAAc,GAAGZ,iBAAiB,CAAC,qBAAD,CAAxC;AACA,QAAMa,aAAa,GAAGb,iBAAiB,CAAC,oBAAD,CAAvC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM;AAAEsB,IAAAA;AAAF,MAAeN,KAArB;;AAEA,QAAMO,iBAAiB,GAAG,MAAM;AAC9BF,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD,GAFD;;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuB,QAAJ,EAAc;AACZL,MAAAA,QAAQ,CAACb,QAAQ,CAACkB,QAAD,CAAT,CAAR;AACD,KAFD,MAEO;AACLL,MAAAA,QAAQ,CAACb,QAAQ,EAAT,CAAR;AACD;AACF,GANQ,EAMN,CAACa,QAAD,EAAWK,QAAX,CANM,CAAT;AAQA,QAAME,KAAK,GAAGtB,WAAW,CACtBuB,KAAD,KAAY;AACVD,IAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYA;AADT,GAAZ,CADuB,EAIvB,EAJuB,CAAzB;AAOA,QAAME,YAAY,GAAGxB,WAAW,CAC7BuB,KAAD,KAAY;AACVC,IAAAA,YAAY,EAAED,KAAK,CAACD,KAAN,CAAYE;AADhB,GAAZ,CAD8B,EAI9B,EAJ8B,CAAhC;;AAOA,MAAI,CAACF,KAAK,CAACA,KAAN,CAAYG,MAAjB,EAAyB;AACvB,wBACE;AAAK,MAAA,KAAK,EAAE1B,YAAY,CAAC2B,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAED,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIP,QAAJ,EAAc;AACZL,MAAAA,QAAQ,CAACb,QAAQ,CAACkB,QAAD,CAAT,CAAR;AACD,KAFD,MAEO;AACLL,MAAAA,QAAQ,CAACb,QAAQ,EAAT,CAAR;AACD;AACF,GAND;;AAQA,QAAM0B,QAAQ,GAAG,MAAM;AACrB,QAAIR,QAAJ,EAAc;AACZL,MAAAA,QAAQ,CAACZ,aAAa,CAACiB,QAAD,CAAd,CAAR;AACD,KAFD,MAEO;AACLL,MAAAA,QAAQ,CAACZ,aAAa,EAAd,CAAR;AACD;AACF,GAND;;AAQA,QAAM0B,SAAS,GAAG,MAAM;AACtB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAEC,MAAM,CAACC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEADF,eAIE;AAAK,MAAA,KAAK,EAAED,MAAM,CAACE,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAEtB,MAAM,CAACuB,KAA1B;AAAiCC,QAAAA,WAAW,EAAE;AAA9C,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,KAAK,EAAE;AAAEF,QAAAA,eAAe,EAAEtB,MAAM,CAACyB;AAA1B,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,CAJF,CADF;AAqBD,GAtBD;;AAwBA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,UAAU,EAAEd,KAAK,CAACA,KAAN,CAAYG,MAD1B;AAEE,IAAA,IAAI,EAAE,MAAMG,QAAQ,EAFtB;AAGE,IAAA,OAAO,EAAE,IAHX;AAIE,IAAA,eAAe,EAAE,MAAMD,WAAW,EAJpC;AAKE,IAAA,iBAAiB,MALnB;AAME,IAAA,0BAA0B,EAAE,EAN9B;AAOE,IAAA,wBAAwB,eACtB;AAAI,MAAA,KAAK,EAAE;AAAEU,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCARJ;AAUE,IAAA,uBAAuB,eACrB;AAAI,MAAA,KAAK,EAAE;AAAEA,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAcE,oBAAC,KAAD;AACE,IAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADV;AAEE,IAAA,IAAI,eAAE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AAGE,IAAA,KAAK,EAAEhB,iBAHT;AAIE,IAAA,MAAM,EAAEH,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAoBGA,WAAW,gBAAG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAkB,IApBhC,EAqBGF,cAAc,gBACb;AAAK,IAAA,KAAK,EAAEc,MAAM,CAACQ,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAER,MAAM,CAACS,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,KAAK,CAACA,KAAN,CAAYkB,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5B,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEA,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,WAAW,EAAErB,iBAAvB;AAA0C,MAAA,IAAI,EAAEoB,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GANA,CADH,CADF,CADa,GAYXxB,aAAa,gBACf;AAAK,IAAA,KAAK,EAAEa,MAAM,CAACa,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAEb,MAAM,CAACS,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,KAAK,CAACA,KAAN,CAAYkB,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5B,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEA,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,WAAW,EAAErB,iBAAvB;AAA0C,MAAA,IAAI,EAAEoB,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GANA,CADH,CADF,CADe,gBAaf;AAAK,IAAA,KAAK,EAAEX,MAAM,CAACc,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAEd,MAAM,CAACS,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,KAAK,CAACA,KAAN,CAAYkB,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5B,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEA,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,WAAW,EAAErB,iBAAvB;AAA0C,MAAA,IAAI,EAAEoB,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GANA,CADH,CADF,CA9CJ,CADF,eA4DE;AAAK,IAAA,KAAK,EAAEX,MAAM,CAACe,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,YAAY,CAACA,YAAb,gBAA4B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,GAA0C,IAD7C,CA5DF,CADF;AAkED,CApJD;;AAsJA,MAAMM,MAAM,GAAG;AACbQ,EAAAA,SAAS,EAAE;AACTQ,IAAAA,UAAU,EAAE,MADH;AAETX,IAAAA,WAAW,EAAE,MAFJ;AAGTY,IAAAA,MAAM,EAAE,oBAHC;AAITC,IAAAA,SAAS,EAAE,MAJF;AAKTC,IAAAA,YAAY,EAAE,MALL;AAMTC,IAAAA,OAAO,EAAE,MANA;AAOTC,IAAAA,aAAa,EAAE;AAPN,GADE;AAUbR,EAAAA,eAAe,EAAE;AACfG,IAAAA,UAAU,EAAE,MADG;AAEfX,IAAAA,WAAW,EAAE,MAFE;AAGfY,IAAAA,MAAM,EAAE,oBAHO;AAIfC,IAAAA,SAAS,EAAE,MAJI;AAKfC,IAAAA,YAAY,EAAE;AALC,GAVJ;AAiBbL,EAAAA,cAAc,EAAE;AACdE,IAAAA,UAAU,EAAE,KADE;AAEdX,IAAAA,WAAW,EAAE,KAFC;AAGdY,IAAAA,MAAM,EAAE,oBAHM;AAIdC,IAAAA,SAAS,EAAE,MAJG;AAKdC,IAAAA,YAAY,EAAE;AALA,GAjBH;AAwBbV,EAAAA,OAAO,EAAE;AACPa,IAAAA,QAAQ,EAAE,MADH;AAEPF,IAAAA,OAAO,EAAE,MAFF;AAGPC,IAAAA,aAAa,EAAE,QAHR;AAIPE,IAAAA,cAAc,EAAE,QAJT;AAKPC,IAAAA,aAAa,EAAE;AALR,GAxBI;AA+BbvB,EAAAA,YAAY,EAAE;AACZM,IAAAA,SAAS,EAAE;AADC,GA/BD;AAkCbL,EAAAA,iBAAiB,EAAE;AACjBkB,IAAAA,OAAO,EAAE,MADQ;AAEjBG,IAAAA,cAAc,EAAE;AAFC,GAlCN;AAsCbR,EAAAA,OAAO,EAAE;AACPU,IAAAA,KAAK,EAAE,OADA;AAEPL,IAAAA,OAAO,EAAE,MAFF;AAGPG,IAAAA,cAAc,EAAE;AAHT;AAtCI,CAAf;AA6CA,eAAexC,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport globalStyles from \"../../config/globalStyles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getPosts, loadMorePosts } from \"../../actions/postActions\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport Loading from \"../../components/UI/Loading\";\nimport MemeCard from \"../../components/UI/MemeCard\";\nimport Button from \"../../components/UI/Button\";\nimport Modal from \"../../components/UI/Modal\";\nimport Link from \"../../components/UI/Link\";\nimport Backdrop from \"../../components/UI/Backdrop\";\nimport colors from \"../../config/colors\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst All = (props) => {\n  const dispatch = useDispatch();\n  const biggerThan1024 = useMediaPredicate(\"(min-width: 1024px)\");\n  const biggerThan720 = useMediaPredicate(\"(min-width: 720px)\");\n  const [toggleModal, setToggleModal] = useState(false);\n\n  const { category } = props;\n\n  const handleToggleModal = () => {\n    setToggleModal(!toggleModal);\n  };\n\n  useEffect(() => {\n    if (category) {\n      dispatch(getPosts(category));\n    } else {\n      dispatch(getPosts());\n    }\n  }, [dispatch, category]);\n\n  const posts = useSelector(\n    (state) => ({\n      posts: state.posts.posts,\n    }),\n    []\n  );\n\n  const loadingPosts = useSelector(\n    (state) => ({\n      loadingPosts: state.posts.loadingPosts,\n    }),\n    []\n  );\n\n  if (!posts.posts.length) {\n    return (\n      <div style={globalStyles.fullScreenLoading}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const refreshPage = () => {\n    if (category) {\n      dispatch(getPosts(category));\n    } else {\n      dispatch(getPosts());\n    }\n  };\n\n  const loadMore = () => {\n    if (category) {\n      dispatch(loadMorePosts(category));\n    } else {\n      dispatch(loadMorePosts());\n    }\n  };\n\n  const ModalBody = () => {\n    return (\n      <div>\n        <h4 style={styles.modalMessage}>\n          You need to be signed in to interact with content on our site.\n        </h4>\n        <div style={styles.modalBtnContainer}>\n          <Link to=\"/login\">\n            <Button\n              title=\"Login\"\n              style={{ backgroundColor: colors.green, marginRight: 10 }}\n            />\n          </Link>\n          <Link to=\"/signup\">\n            <Button\n              title=\"Signup\"\n              style={{ backgroundColor: colors.tertiary }}\n            />\n          </Link>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <InfiniteScroll\n        dataLength={posts.posts.length}\n        next={() => loadMore()}\n        hasMore={true}\n        refreshFunction={() => refreshPage()}\n        pullDownToRefresh\n        pullDownToRefreshThreshold={50}\n        pullDownToRefreshContent={\n          <h3 style={{ textAlign: \"center\" }}>&#8595; Pull down to refresh</h3>\n        }\n        releaseToRefreshContent={\n          <h3 style={{ textAlign: \"center\" }}>&#8593; Release to refresh</h3>\n        }\n      >\n        <Modal\n          header={<h1>Hey there!</h1>}\n          body={<ModalBody />}\n          close={handleToggleModal}\n          isOpen={toggleModal}\n        />\n        {toggleModal ? <Backdrop /> : null}\n        {biggerThan1024 ? (\n          <div style={styles.container}>\n            <div style={styles.content}>\n              {posts.posts.map((post, i) => {\n                return (\n                  <React.Fragment key={i}>\n                    <MemeCard toggleModal={handleToggleModal} post={post} />\n                  </React.Fragment>\n                );\n              })}\n            </div>\n          </div>\n        ) : biggerThan720 ? (\n          <div style={styles.mediumContainer}>\n            <div style={styles.content}>\n              {posts.posts.map((post, i) => {\n                return (\n                  <React.Fragment key={i}>\n                    <MemeCard toggleModal={handleToggleModal} post={post} />\n                  </React.Fragment>\n                );\n              })}\n            </div>\n          </div>\n        ) : (\n          <div style={styles.smallContainer}>\n            <div style={styles.content}>\n              {posts.posts.map((post, i) => {\n                return (\n                  <React.Fragment key={i}>\n                    <MemeCard toggleModal={handleToggleModal} post={post} />\n                  </React.Fragment>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </InfiniteScroll>\n      <div style={styles.loading}>\n        {loadingPosts.loadingPosts ? <Loading /> : null}\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst styles = {\n  container: {\n    marginLeft: \"35vw\",\n    marginRight: \"35vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  mediumContainer: {\n    marginLeft: \"20vw\",\n    marginRight: \"20vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\",\n  },\n  smallContainer: {\n    marginLeft: \"5vw\",\n    marginRight: \"5vw\",\n    height: \"calc(100vh - 56px)\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\",\n  },\n  content: {\n    maxWidth: \"90vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    paddingBottom: 20,\n  },\n  modalMessage: {\n    textAlign: \"center\",\n  },\n  modalBtnContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  loading: {\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n};\n\nexport default All;\n"]},"metadata":{},"sourceType":"module"}