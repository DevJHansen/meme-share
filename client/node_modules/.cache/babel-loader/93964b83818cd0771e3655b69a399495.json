{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Documents/Programming /meme-share/client/src/components/singleUse/newPost/Form.jsx\";\nimport React, { useState } from \"react\";\nimport Input from \"../../UI/Input\";\nimport Button from \"../../UI/Button\";\nimport Link from \"../../UI/Link\";\nimport Loading from \"../../UI/Loading\";\nimport Colors from \"../../../config/colors\";\nimport { useDispatch } from \"react-redux\";\nimport { store } from \"react-notifications-component\";\nexport const FormFooter = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    style: styles.linkBtn,\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: { ...styles.footerBtn,\n      backgroundColor: Colors.tertiary\n    },\n    title: \"Cancel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst FormBody = props => {\n  const [title, setTitle] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState();\n  const [isSelected, setIsSelected] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handlePost = () => {};\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleFileSelect = e => {\n    setSelectedFile(e.target.files[0]);\n    setIsSelected(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: title,\n    onChange: handleTitleChange,\n    type: \"text\",\n    placeholder: \"Title\",\n    style: styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleFileSelect,\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), isSelected ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Filename: \", selectedFile.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Filetype: \", selectedFile.type), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Size in bytes: \", selectedFile.size), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"lastModifiedDate:\", \" \", selectedFile.lastModifiedDate.toLocaleDateString())) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Select a file to show details\"), loading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    style: styles.button,\n    onClick: handlePost,\n    title: \"Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst styles = {\n  button: {\n    margin: 5,\n    width: \"90%\",\n    backgroundColor: Colors.primary\n  },\n  input: {\n    margin: 5,\n    width: \"90%\"\n  },\n  form: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\"\n  },\n  linkText: {\n    fontSize: 12,\n    margin: 4,\n    color: \"#f1f1f1\"\n  },\n  link: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n  linkBtn: {\n    marginLeft: 2,\n    marginRight: 2,\n    width: \"100%\"\n  },\n  footerBtn: {\n    marginTop: 20,\n    marginBottom: 20,\n    width: \"90%\"\n  }\n};\nexport default FormBody;","map":{"version":3,"sources":["/Users/justin/Documents/Programming /meme-share/client/src/components/singleUse/newPost/Form.jsx"],"names":["React","useState","Input","Button","Link","Loading","Colors","useDispatch","store","FormFooter","styles","link","linkBtn","footerBtn","backgroundColor","tertiary","FormBody","props","title","setTitle","selectedFile","setSelectedFile","isSelected","setIsSelected","loading","setLoading","dispatch","handlePost","handleTitleChange","e","target","value","handleFileSelect","files","input","name","type","size","lastModifiedDate","toLocaleDateString","button","margin","width","primary","form","display","alignItems","justifyContent","flexDirection","linkText","fontSize","color","marginLeft","marginRight","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport Input from \"../../UI/Input\";\nimport Button from \"../../UI/Button\";\nimport Link from \"../../UI/Link\";\nimport Loading from \"../../UI/Loading\";\nimport Colors from \"../../../config/colors\";\nimport { useDispatch } from \"react-redux\";\nimport { store } from \"react-notifications-component\";\n\nexport const FormFooter = () => {\n  return (\n    <div style={styles.link}>\n      <Link style={styles.linkBtn} to=\"/\">\n        <Button\n          style={{ ...styles.footerBtn, backgroundColor: Colors.tertiary }}\n          title=\"Cancel\"\n        />\n      </Link>\n    </div>\n  );\n};\n\nconst FormBody = (props) => {\n  const [title, setTitle] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState();\n  const [isSelected, setIsSelected] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handlePost = () => {};\n\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleFileSelect = (e) => {\n    setSelectedFile(e.target.files[0]);\n    setIsSelected(true);\n  };\n\n  return (\n    <div>\n      <Input\n        value={title}\n        onChange={handleTitleChange}\n        type=\"text\"\n        placeholder=\"Title\"\n        style={styles.input}\n      />\n      <Input onChange={handleFileSelect} type=\"file\" />\n      {isSelected ? (\n        <div>\n          <p>Filename: {selectedFile.name}</p>\n          <p>Filetype: {selectedFile.type}</p>\n          <p>Size in bytes: {selectedFile.size}</p>\n          <p>\n            lastModifiedDate:{\" \"}\n            {selectedFile.lastModifiedDate.toLocaleDateString()}\n          </p>\n        </div>\n      ) : (\n        <p>Select a file to show details</p>\n      )}\n      {loading ? (\n        <Loading />\n      ) : (\n        <Button style={styles.button} onClick={handlePost} title=\"Post\" />\n      )}\n    </div>\n  );\n};\n\nconst styles = {\n  button: {\n    margin: 5,\n    width: \"90%\",\n    backgroundColor: Colors.primary,\n  },\n  input: {\n    margin: 5,\n    width: \"90%\",\n  },\n  form: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n  linkText: {\n    fontSize: 12,\n    margin: 4,\n    color: \"#f1f1f1\",\n  },\n  link: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n  },\n  linkBtn: {\n    marginLeft: 2,\n    marginRight: 2,\n    width: \"100%\",\n  },\n  footerBtn: {\n    marginTop: 20,\n    marginBottom: 20,\n    width: \"90%\",\n  },\n};\n\nexport default FormBody;\n"]},"metadata":{},"sourceType":"module"}